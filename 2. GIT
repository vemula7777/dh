
12-06-2023: DAY-01: INTRO, INSTALLATION, ARCHITECTURE & COMMANDS (ADD, COMMIT, STATUS, RESTORE, LOGS)

GIT:
yum install git -y: to install git
git init: to initialize .git repo (local repo)

vim index.html (untracked)
git status: show the stage of file
git add index.html: to track index.html
git commit -m "commit-1" index.html: to commit index.html
git log: to show the commits 
git log --oneline: to show logs on single line
git log -2: shows recent 2 logs
git log -5: shows recent 5 logs
git show e6bde29: to show the files which is committed to it
git show css1: to show which commit applied to file css1

TO CONFIGURE USER & EMAIL:
git config user.name "rahamshaik"
git config user.email "rahamshaik@gmail.com"
git log


RESTORE: TRACK -- > UNTRACK

touch file
git status
git add file1
git status
git restore --staged file1
git status

NOTE: It should not be committed.
if you try to untrack the committed file we need to modify the file.

HISTORY:

  1  mkdir netflic
    2  mv netflic/ netflix
    3  cd netflix/
    4  yum install git -y
    5  ls -al
    6  git init
    7  ls -al
    8  vim index.html
    9  git status
   10  git add index.html
   11  git status
   12  git commit -m "commit-1" index.html
   13  git status
   14  ll
   15  touch css{1..5}
   16  ll
   17  git status
   18  git add *
   19  git status
   20  git commit -m "commit-2" *
   21  git log
   22  git log --oneline
   23  git show e6bde29
   24  git show css1
   25  git config user.name "rahamshaik"
   26  git config user.email "rahamshaik@gmail.com"
   27  git log
   28  ll
   29  touch js{1..5}
   30  ll
   31  git status
   32  git add *
   33  git status
   34  git commit -m "commit-3" *
   35  git log
   36  git log -2
   37  git log -1
   38  toych file1
   39  touch file1
   40  git status
   41  git add file1
   42  git status
   43  git restore --staged file1
   44  git status
   45  git add file1
   46  git status
   47  git restore --staged file1
   48  git status
   49  git add file1
   50  git status
   51  ll
   52  vim index.html
   53  git status
   54  history

===============================================================

13-06-2023: DAY-02: BRACHES, MEREGE, REBASE, GITHUB

BRANCH: It is an individual line of development.
developers can develop the source code independently.
Default branch -- > Master 
master & main branches are called as long living branches
dev, qa, hotfix, release branches are called as short-living branches.

git branch: to list the branches
git branch movies: to create a branch called movies
git checkout movies: to switch to branch called movies
git checkout -b recharge: to create and switch at a time.




MERGE: Used to merge file blw two branches

git checkout master
git merge movies
git merge train


REBASE: Used to merge file blw two branches
git rebase recharge
git rebase dth



HISTORY:

 1  mkdir paytm
    2  cd paytm/
    3  yum install git -y
    4  git --version
    5  git -v
    6  ls -al
    7  git init
    8  ls -al
    9  touch file1
   10  git statsu
   11  git status
   12  git add file1
   13  git config user.name "raham"
   14  git config user.email "raham@gmail.com"
   15  git commit -m "commit-1" file1
   16  git branch
   17  git branch movies
   18  git branch
   19  ll
   20  git checkout movies
   21  git branch
   22  touch movies{1..5}
   23  git add movies*
   24  git config user.name "dev1"
   25  git config user.email "dev1@gmail.com"
   26  git commit -m "movies-v.1.0" movies*
   27  git log
   28  git show 79b58f79bed0d748b4e8b3390443ed67133be9da
   29  ll
   30  git checkout master
   31  ll
   32  git checkout movies
   33  git branch
   34  git branch train
   35  git branch
   36  git checkout train
   37  ll
   38  touch train{1..5}
   39  ll
   40  git status
   41  git add *
   42  git config user.name "dev2"
   43*
   44  git commit -m "train-v.1.0" *
   45  git branch
   46  git checkout -b recharge
   47  git branch
   48  ll
   49  git branch
   50  git log
   51  touch recharge{1..5}
   52  git add *
   53  git config user.name "dev3"
   54  git config user.email "dev3@gmail.com"
   55  git commit -m "recharge-v.1.0" *
   56  ll
   57  git checkout master
   58  git branch
   59  ll
   60  git checkout -b dth
   61  git branch
   62  ll
   63  touch dth{1..5}
   64  git add *
   65  git config user.name "dev4"
   66  git config user.email "dev4@gmail.com"
   67  git commit -m "dth-v.1.0" *
   68  git branch
   69  git checkout master
   70  ll
   71  git merge movies
   72  ll
   73  git merge train
   74  ll
   75  git rebase recharge
   76  ll
   77  git rebase dth
   78  ll
   79  git remote add origin https://github.com/kodaganivshnuvardhan/paytm.git
   80  ls -al
   81  git push origin master
   82  ll
   83  git checkout dth
   84  git branch
   85  git branch -D master
   86  git branch

 ======================================================================
 
 14-06-2023: DAY-03: PULL, PUSH, REVERT, CHERRYPICK, STASH & SOME UI CONECOTS OF GITHUB
 
 REVERT: To undo the merging of two branches
git revert branchname

CHERRY-PICK: To MERGE SPECIFIC FILES 
git cherry-pick commit-id

STATSH: To hide the un committed files/to save the work temperorly
git stash	: to hide the tracked files
git stash apply	: it will show the hidede file
git stash list	: it shows the list of stashes
git stash pop	: remove last stash
git statsh clear: remove all the stashes

PUSH: to send files from local to central repo
git push origin branchname

PULL: it will get changes from central to local.
git pull origin branchname

HISTORY:

1  mkdir paytm
    2  cd paytm/
    3  yum install git -y
    4  git init
    5  git branch
    6  touch file1
    7  git add file1
    8  git config user.email "raham@gmail.com"
    9  git config user.name  "raham"
   10  git commit -m "raham commits" file1
   11  git branch
   12  git branch movies
   13  git branch
   14  git checkout movies
   15  touch movies{1..5}
   16  git add *
   17  git config user.email "dev1@gmail.com"
   18  git config user.name "dev1"
   19  git commit -m "dev1 commits" *
   20  git log
   21  git branch
   22  ll
   23  git checkout -b train
   24  ll
   25  touch train{1..5}
   26  git add *
   27  git config user.email "dev2@gmail.com"
   28  git config user.name "dev2"
   29  git commit -m "dev2 commits" *
   30  git status
   31  ll
   32  git checkout -b recharge
   33  ll
   34  touch recharge{1..5}
   35  git add *
   36  git config user.email "dev3@gmail.com"
   37  git config user.name "dev3"
   38  git commit -m "dev3 commits" *
   39  ll
   40  git checkout -b dth
   41*
   42  touch dth{1..5}
   43  git add *
   44  git config user.email "dev4@gmail.om"
   45*
   46  git commit -m "dev4 commits" *
   47*
   48  ll
   49  git merge movies
   50  git merge train
   51  git rebase recharge
   52  git rebase dth
   53  ll
   54  git remote add origin https://github.com/RAHAMSHAIK007/paytmrepositry.git
   55  git push origin master
   56  git branch
   57  git push origin movies
   58  git push origin recharge
   59  git push origin train
   60  ps
   61  kill -9 6745 6744 6743
   62  ps
   63  git push origin train
   64  git push origin dth
   65  git branch
   66  ll
   67  git checkout movies
   68  ll
   69  touch movies{6..10}
   70  git add *
   71  git config user.email "dev1@gmail.om"
   72  git config user.name "dev1"
   73  git commit -m "dev1 2nd commits" *
   74  git checkout master
   75  ll
   76  git merge movies
   77  git revert movies
   78  ll
   79  git checkout movies
   80  ll
   81  git merge train
   82  ll
   83  git revert train
   84  ll
   85  git merge recharge
   86  ll
   87  git rebase recharge
   88  ll
   89  git rebase movies
   90  ll
   91  git checkout train
   92  ll
   93  git merge recharge
   94  ll
   95  git rebase recharge
   96  ll
   97  git revert recharge
   98  ll
   99  git branch
  100  git branch -m recharge abcd
  101  git branch
  102  git branch -m abcd recharge
  103  git branch
  104  git branch -D recharge
  105  git branch
  106  git logs
  107  git log
  108  ll
  109  cd
  110  mkdir abcd
  111  cd abcd/
  112  git init
  113  git branch -m branch1
  114  touch file1
  115  git add *
  116  git commit -m "abcd" file1
  117  git branch
  118  git checkout -b branch2
  119  ll
  120  touch java{1..5}
  121  git add *
  122  git commit -m "java commits" *
  123  touch python{1..5}
  124  git add *
  125  git commit -m "python commits" *
  126  git log --oneline
  127  git checkout branch1
  128  ll
  129  git cherry-pick 20d8330
  130  ll
  131  git cherry-pick 7f25b18
  132  ll
  133  cd
  134  ll
  135  mkdir raham
  136  cd raham/
  137  git init
  138  touch file1
  139  git add file1
  140  ll
  141  git stash
  142  git commit -m "one" file1
  143  touch file2
  144  git add file2
  145  git stash
  146  ll
  147  git stash apply
  148  ll
  149  git stash
  150  ll
  151  git stash list
  152  git stash pop
  153  git stash list
  154  git stash clear
  155  ll
  156  cd ..
  157  ll
  158  cd paytm/
  159  git branch
  160  git checkout master
  161  ll
  162  cat dth1
  163  git pull origin master
  164  cat dth1
  165  git pull origin master
  166  cat dth1
  167  git branch
  168  git pull
  169  cat dth
  170  cat dth1
  171  git pull origin master
  172   git config pull.rebase true
  173  git pull origin master
  174  cat dth1
  175  git pull origin master
  176  cat dth1
  177  history

===========================================================================================

DAY-04: MERGE CONFILICT, FORK , CLONE , UI TOPICS


 1  mkdir abcd
    2  cd abcd/
    3  yum install git -y
    4  git init
    5  vim file1
    6  git add file1
    7  git commit -m "dev-1 commits" file1
    8  git branch
    9  git branch -m master branch1
   10  git branch
   11  git checkout -b branch2
   12  vim file1
   13  git add file1
   14  git commit -m "dev-2 commits" file1
   15  cat file1
   16  git checkout -b branch
   17* git checkout  branch1
   18  cat file1
   19  git checkout branch1
   20  cat file1
   21  vim file1
   22  git add file1
   23  git commit -m "dev-1 2nd commits" file1
   24  cat file1
   25  git merge branch2
   26  git diff file1
   27  vim file1
   28  git status
   29  git add file1
   30  git status
   31  git commit -m "abcd" file1
   32  git commit -m "abcd"
   33  cat file1
   34  git status
   35  ll
   36  git log
   37  git log --oneline
   38  git show bd46d71
   39  git show bd46d71 --stat
   40  git commit --amend -m "raham"
   41  git log --oneline
   42  git commit --amend -m "devops"
   43  git log --oneline
   44  git commit --amend -m "aws"
   45  git log --oneline
   46  git reset 7dcc9af
   47  git log --oneline
   48  git update-ref -d HEAD
   49  git log --oneline
   50  cd
   51  ll
   52  git clone https://github.com/RAHAMSHAIK007/ansible-jenkinsproject.git
   53  ll
   54  cd ansible-jenkinsproject
   55  ll
   56  git branch
   57  cd
   58  git clone https://github.com/RAHAMSHAIK
